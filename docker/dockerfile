
# build stage
FROM golang:alpine AS builder
LABEL stage=builder
WORKDIR /app
RUN apk --no-cache add build-base git gcc curl
COPY . .
RUN cd /app && CGO_ENABLED=0 go build -o main main.go
RUN curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz

# final stage
FROM alpine AS final
RUN apk add
WORKDIR /app
COPY --from=builder /app/main .
COPY --from=builder /app/migrate.linux-amd64 ./migrate
COPY app.env .
COPY start.sh .
COPY db/migration ./migration
EXPOSE 8080
RUN ls -al
CMD ["/app/main"]
ENTRYPOINT ["/app/start.sh"]